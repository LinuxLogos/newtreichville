# Generated by Django 5.2.4 on 2025-07-02 22:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Category Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Order of display for categories",
                        verbose_name="Display Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Menu Category",
                "verbose_name_plural": "Menu Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("subject", models.CharField(max_length=200, verbose_name="Subject")),
                ("message", models.TextField(verbose_name="Message")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_read",
                    models.BooleanField(default=False, verbose_name="Mark as Read"),
                ),
            ],
            options={
                "verbose_name": "Contact Message",
                "verbose_name_plural": "Contact Messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Event Title")),
                ("description", models.TextField(verbose_name="Description")),
                ("event_date", models.DateField(verbose_name="Event Date")),
                ("event_time", models.TimeField(verbose_name="Event Time")),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="events/", verbose_name="Image"
                    ),
                ),
                (
                    "capacity",
                    models.IntegerField(blank=True, null=True, verbose_name="Capacity"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Is Published"),
                ),
                (
                    "booking_required",
                    models.BooleanField(default=False, verbose_name="Booking Required"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
                "ordering": ["-event_date", "-event_time"],
            },
        ),
        migrations.CreateModel(
            name="Table",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Table Name/Number"
                    ),
                ),
                ("capacity", models.IntegerField(verbose_name="Capacity")),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Location (e.g., Terrace, Indoors)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Table",
                "verbose_name_plural": "Tables",
            },
        ),
        migrations.CreateModel(
            name="Dish",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Dish Name")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="dishes/", verbose_name="Image"
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="Is Available"),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Feature this dish on the homepage?",
                        verbose_name="Is Featured",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dishes",
                        to="api.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dish",
                "verbose_name_plural": "Dishes",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(max_length=200, verbose_name="Customer Name"),
                ),
                (
                    "customer_email",
                    models.EmailField(max_length=254, verbose_name="Customer Email"),
                ),
                (
                    "customer_phone",
                    models.CharField(max_length=20, verbose_name="Customer Phone"),
                ),
                ("reservation_date", models.DateField(verbose_name="Reservation Date")),
                ("reservation_time", models.TimeField(verbose_name="Reservation Time")),
                (
                    "number_of_guests",
                    models.IntegerField(verbose_name="Number of Guests"),
                ),
                (
                    "special_requests",
                    models.TextField(
                        blank=True, null=True, verbose_name="Special Requests"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                            ("no-show", "No-Show"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "table",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.table",
                        verbose_name="Assigned Table",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservation",
                "verbose_name_plural": "Reservations",
                "ordering": ["-reservation_date", "-reservation_time"],
            },
        ),
    ]
